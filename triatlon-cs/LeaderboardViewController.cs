// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Collections.Generic;

namespace triatloncs
{
	public partial class LeaderboardViewController : NSViewController
	{
		public LeaderboardViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            var dataSource = new LeaderboardDataSource();
            LeaderboardTableView.DataSource = dataSource;
            LeaderboardTableView.Delegate = new LeaderboardDelegate(dataSource);
        }
    }

	public class LeaderboardDataSource : NSTableViewDataSource
    {
		public List<Result> Results = DependencyProvider.Shared.GetSharedService().GetParticipantsWithResultInRace();

        public override nint GetRowCount(NSTableView tableView)
        {
			return Results.Count;
        }
    }

	public class LeaderboardDelegate : NSTableViewDelegate
    {
		private const string CellIdentifier = "LeaderboardCell";
		private LeaderboardDataSource DataSource;

		public LeaderboardDelegate(LeaderboardDataSource dataSource)
        {
			this.DataSource = dataSource;
        }

        public override NSView GetViewForItem(NSTableView tableView, NSTableColumn tableColumn, nint row)
        {
            NSTextField view = (NSTextField)tableView.MakeView(CellIdentifier, this);
            if (view == null)
            {
                view = new NSTextField();
                view.Identifier = CellIdentifier;
                view.BackgroundColor = NSColor.Clear;
                view.TextColor = NSColor.Black;
                view.Bordered = false;
                view.Editable = false;
            }

            switch (tableColumn.Title)
            {
                case "ID":
                    view.StringValue = DataSource.Results[(int)row].Id.ToString();
                    break;
                case "Nume":
                    view.StringValue = DataSource.Results[(int)row].Name;
                    break;
                case "Puncte":
                    view.StringValue = DataSource.Results[(int)row].Points.ToString();
                    break;
            }

            return view;
        }
    }
}
