// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Collections.Generic;

namespace triatloncs
{
	public partial class AddResultViewController : NSViewController
	{
		private NSViewController _presentor;
		public NSViewController Presentor
		{
			get { return _presentor; }
			set { _presentor = value; }
		}

		private TriatlonService service = DependencyProvider.Shared.GetSharedService();
		private List<string> athletesName = new List<string>();

		public AddResultViewController (IntPtr handle) : base (handle)
		{
			service.GetAthletes().ForEach(athlete => athletesName.Add(athlete.Id.ToString() + " - " + athlete.FullName));
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
			AthletesPopUpButton.RemoveAllItems();
			AthletesPopUpButton.AddItems(athletesName.ToArray());
        }

        private void CloseDialog()
        {
			Presentor.DismissViewController(this);
        }

		partial void AddButtonClicked(Foundation.NSObject sender)
        {
            int points;
            bool isNumeric = int.TryParse(PointsTextField.StringValue, out points);
			if (!isNumeric)
            {
				var alert = new NSAlert()
				{
					AlertStyle = NSAlertStyle.Critical,
					InformativeText = "Te rugam sa introduci un numar de puncte valide.",
					MessageText = "Input formatat gresit"
				};
				alert.RunModal();
				return;
            }
			int end = 1;
			string value = AthletesPopUpButton.SelectedItem.Title;
			for (int i = 2; i < value.Length; i++)
            {
				if (value[i - 1] == ' ') break;
				end = i;
            }
            int athleteId = int.Parse(value.Substring(0, end));
			service.AddResult(athleteId, points);
			CloseDialog();
        }

		partial void CloseButtonClicked(Foundation.NSObject sender)
        {
			CloseDialog();
        }
    }
}
